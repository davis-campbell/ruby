require_relative "../chess"

describe Game do
  describe Game::Board do
    let(:board) { Game::Board.new }
    describe '#new' do
      it 'generates an array of arrays of Space instances' do
        expect(board[0]).to be_an_instance_of Array
        expect(board[0][0]).to be_an_instance_of Game::Board::Space
      end
      
      # it correctly places pieces on spaces
      it 'has the right pieces in the right spots' do
        expect(board[0][0].occupied).to be_an_instance_of Game::Rook
        expect(board[0][1].occupied).to be_an_instance_of Game::Knight
        expect(board[0][2].occupied).to be_an_instance_of Game::Bishop
        expect(board[0][3].occupied).to be_an_instance_of Game::King
        expect(board[0][4].occupied).to be_an_instance_of Game::Queen
        expect(board[1][0].occupied).to be_an_instance_of Game::Pawn
        expect(board[7][3].occupied).to be_an_instance_of Game::King
        expect(board[7][4].occupied).to be_an_instance_of Gam::Queen
      end
      it 'is 8 by 8' do
        expect(board[0].length).to eq(8)
        expect(board.length).to eq(8)
      end
      it 'contains alternating black and white spaces' do
        expect(board[0][0].color).to eq('Black')
        expect(board[0][1].color).to eq('White')
        expect(board[1][0].color).to eq('White')
        expect(board[7][7].color).to eq('Black')
        expect(board[7][6].color).to eq('White')
      end
    end
    describe Game::Board::Space do
    end
  end
  describe Game::Player do
  end
  describe Game::Piece do
  
  end
  describe Game::Pawn do
  end
  describe Game::Rook do
  end
  describe Game::Knight do
  end
  describe Game::Bishop do
  end
  describe Game::King do
  end
  describe Game::Queen do
  end
end
